const fs = require('fs');
const path = require('path');

// Define the path to your tokens file
const tokensFilePath = path.resolve(__dirname, '../src/lib/colors.json');
// Define where the output file will be saved
const outputFilePath = path.resolve(__dirname, '../src/lib/tailwind-colors.js');

console.log('Reading design tokens...');

// Read the raw JSON file
const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf-8'));

// We'll use the 'primitive/patient-light' theme for this example.
// You can change this to 'primitive/doctor-light' or another theme if you wish.
const sourceTheme = tokens['primitive/patient-light'].color;

const tailwindColors = {};

console.log("Transforming colors for Tailwind CSS...");

// Loop through each color category (e.g., 'neutral', 'primary')
for (const colorName in sourceTheme) {
  const colorShades = sourceTheme[colorName];
  tailwindColors[colorName] = {};

  // Loop through each shade (e.g., '100', '200', '500')
  for (const shade in colorShades) {
    // Get the hex value
    const hexValue = colorShades[shade]['$value'];
    // Add it to our new object
    tailwindColors[colorName][shade] = hexValue;
  }
}

// Prepare the content to be written to the JS file
const fileContent = `// This file is auto-generated by the 'generate-colors.js' script.
// Do not edit this file directly.

const colors = ${JSON.stringify(tailwindColors, null, 2)};

module.exports = colors;
`;

// Write the transformed colors to the output file
fs.writeFileSync(outputFilePath, fileContent);

console.log(`âœ… Success! Tailwind colors generated at ${outputFilePath}`);